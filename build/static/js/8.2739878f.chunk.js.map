{"version":3,"sources":["myPages/About.js","myPages/article/ArticleContent.js","myPages/article/LinkToArticles.js","myPages/article/ViewSelector.js","myPages/Article.js","myPages/admin/setup.js","myPages/admin/PreviewContainer.js","myPages/admin/AboutPreview.js","myPages/admin/ArticlePreview.js","myPages/admin/EditorEmbeddedMusic.js","myPages/admin/EditorSpecialText.js","myPages/admin/EditorTracklist.js","myPages/admin/LimitedText.js","myPages/admin/config.js","myPages/Admin.js","myComponents/markdownRenderer/EmbeddedMusic.js","myComponents/markdownRenderer/MarkdownImage.js","myComponents/markdownRenderer/SpecialText.js","myComponents/markdownRenderer/Tracklist.js","myComponents/MarkdownRenderer.js"],"names":["About","navSlideClass","previewData","className","title","containerHeight","logoWidth","description","itemPath","renderOnData","data","style","backgroundImage","mainImage","md","body","AboutWrapper","props","render","ArticleContent","musicOnly","publicationDate","categoryKey","category","categoryBy","tabTitle","WideLogo","ArticleHeader","image","href","path","name","MarkdownRenderer","LinkToArticles","nextArticle","urlPath","previousArticle","ViewSelector","open","setMusicOnly","toggleSelector","sc","onClick","Article","actions","contentRef","React","createRef","state","selectorOpen","requestFullscreen","contentElem","current","fscreen","fullscreenEnabled","setState","renderMain","routeMatch","match","articlePath","params","ref","CMSItemLoader","article","articleRelated","required","push","alt","img","this","getActions","MenuWrapper","Component","window","CMS_MANUAL_INIT","PreviewContainer","parent","previewIframe","document","querySelectorAll","iframe","contentDocument","querySelector","previewPaneHead","head","stylesheets","stylesheet","appendChild","cloneNode","children","AboutPreview","entry","getAsset","toJS","toString","ArticlePreview","id","label","fields","widget","pattern","fromBlock","regexMatch","toBlock","toPreview","options","value","hint","align","size","defaultTrackValues","startTime","artist","trackName","default","tracks","fromJS","JSON","parse","List","isList","tracksWithDefaults","map","track","tracksStr","stringify","NetlifyTextWidget","NetlifyCmsWidgetText","controlComponent","LimitedText","limitNum","onChange","otherProps","alteredValue","slice","length","saveFolder","backend","branch","media_folder","public_folder","collections","folder","slug","create","format","tagname","categories","key","delete","files","file","CMS","init","Admin","config","registerEditorComponent","EditorEmbeddedMusic","EditorSpecialText","EditorTracklist","registerWidget","registerPreviewTemplate","EmbeddedMusic","iframeWrapperRef","aspectPercentage","trackNumber","saveAspectRatio","getTrackNumber","prevProps","width","height","test","extraClass","showTrackNumber","paddingBottom","MarkdownImage","src","SpecialText","toLowerCase","Tracklist","i","trimmedTime","trim","formatTime","overrides","component"],"mappings":"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","file":"static/js/8.2739878f.chunk.js","sourcesContent":["/** The About page, explaining the site */\nimport React from 'react'\nimport { Titled } from 'react-titled'\n\nimport CMSItemLoader from 'myComponents/CMSItemLoader'\nimport MarkdownRenderer from 'myComponents/MarkdownRenderer'\nimport MenuWrapper from 'myComponents/MenuWrapper'\nimport WideLogo from 'myComponents/WideLogo'\n\nimport './About.css'\n\n/**\n * Render all content wrapped by menus/navigation.\n * navSlideClass is a CSS that will make content slide when the mobile nav slides in.\n */\nconst About = ({ navSlideClass, previewData }) => (\n  <div className={`tng-About ${navSlideClass}`}>\n    { /* Tab Title */ }\n    <Titled title={title => `About | ${title}`} />\n\n    { /* Top Logo */ }\n    <WideLogo className='u-mobileOnly' containerHeight='60px' logoWidth='250px' />\n\n    { /* Main Content */ }\n    <section className='tng-About-content'>\n      <CMSItemLoader\n        description='page text'\n        itemPath='pages/about.json'\n        previewData={previewData}\n        renderOnData={data =>\n          <div>\n            <div\n              className='tng-About-mainImage'\n              style={{ backgroundImage: `url(${data.mainImage})` }}\n            />\n            <div className='tng-About-title'>About</div>\n            <main className='tng-About-text'>\n              <MarkdownRenderer md={data.body || ''} />\n            </main>\n          </div>\n        }\n      />\n    </section>\n  </div>\n)\n\n/** A wrapper around page content with the menus/navigation */\nconst AboutWrapper = (props) => (\n  <MenuWrapper render={About} {...props} />\n)\n\nexport default AboutWrapper\n","/** This renders the actual content of our article, into the Article page */\nimport React from 'react'\nimport { Titled } from 'react-titled'\n\nimport ArticleHeader from 'myComponents/ArticleHeader'\nimport MarkdownRenderer from 'myComponents/MarkdownRenderer'\nimport WideLogo from 'myComponents/WideLogo'\nimport { categoryBy } from 'myUtils/constants'\nimport './ArticleContent.css'\n\nconst ArticleContent = ({ data, musicOnly }) => {\n  const { publicationDate, title, mainImage, category: categoryKey, body } = data\n  const category = categoryKey && categoryBy('key', categoryKey)\n\n  return (\n    <div>\n      <Titled title={tabTitle => `${title} | ${tabTitle}`} />\n\n      <WideLogo className='u-mobileOnly' containerHeight='55px' logoWidth='280px' />\n\n      <ArticleHeader image={mainImage} title={title}>\n        <div>\n          {category &&\n            <a className='tng-ArticleContent-category' href={`/category/${category.path}`}>\n              {category.name}\n            </a>\n          }\n        </div>\n        <div className='tng-ArticleContent-publishDate'>published on {publicationDate}</div>\n      </ArticleHeader>\n\n      <div className='tng-ArticleContent-text'>\n        <MarkdownRenderer md={body || ''} musicOnly={musicOnly} />\n      </div>\n    </div>\n  )\n}\n\nexport default ArticleContent\n","/** The section in the Article page that has links to neighboring articles */\nimport React from 'react'\n\nimport './LinkToArticles.css'\n\nconst LinkToArticles = ({ data }) => (\n  <div className='tng-LinkToArticles'>\n    {data.nextArticle &&\n      <div className='tng-LinkToArticles-section'>\n        <div className='tng-LinkToArticles-label'>next post</div>\n        <div>\n          <a className='tng-LinkToArticles-link' href={data.nextArticle.urlPath}>\n            {data.nextArticle.title}\n          </a>\n        </div>\n      </div>\n    }\n    {data.previousArticle &&\n      <div className='tng-LinkToArticles-section'>\n        <div className='tng-LinkToArticles-label'>previous post</div>\n        <div>\n          <a className='tng-LinkToArticles-link' href={data.previousArticle.urlPath}>\n            {data.previousArticle.title}\n          </a>\n        </div>\n      </div>\n    }\n  </div>\n)\n\nexport default LinkToArticles\n","/** Render an opaque view that allows you to change the view mode of the article */\nimport React from 'react'\n\nimport sc from 'myUtils/suitClass'\n\nimport './ViewSelector.css'\n\nconst ViewSelector = ({ musicOnly, open, setMusicOnly, toggleSelector }) => (\n  <div className={sc('tng-ViewSelector', open && ' is-visible')}>\n    <div>\n      <div className='tng-ViewSelector-title'>select view mode</div>\n      <div>\n        <button\n          className={sc('tng-ViewSelector-viewMode', !musicOnly && 'is-selected')}\n          onClick={() => setMusicOnly(false)}\n        >\n          Text + Music\n        </button>\n      </div>\n      <div>\n        <button\n          className={sc('tng-ViewSelector-viewMode', musicOnly && 'is-selected')}\n          onClick={() => setMusicOnly(true)}\n        >\n          Music only\n        </button>\n      </div>\n      <div>\n        <button className='tng-ViewSelector-closeBtn' onClick={toggleSelector}>\n          <strong>x close</strong>\n        </button>\n      </div>\n    </div>\n  </div>\n)\n\nexport default ViewSelector\n","/**\n * This is the page that is displayed when viewing an article\n */\nimport React, { Component } from 'react'\nimport fscreen from 'fscreen'\n\nimport ArticleContent from './article/ArticleContent'\nimport CMSItemLoader from 'myComponents/CMSItemLoader'\nimport LinkToArticles from './article/LinkToArticles'\nimport MenuWrapper from 'myComponents/MenuWrapper'\nimport ViewSelector from './article/ViewSelector'\nimport sc from 'myUtils/suitClass'\n\nimport './Article.css'\n\nclass Article extends Component {\n  actions = null\n\n  contentRef = React.createRef()\n\n  state = {\n    musicOnly: false,\n    selectorOpen: false\n  }\n\n  /** Return the actions that can be done on the article page */\n  getActions () {\n    const actions = []\n    if (fscreen.fullscreenEnabled) {\n      actions.push({\n        alt: 'full screen',\n        className: 'u-mobileOnly',\n        img: 'fullScreen',\n        onClick: this.requestFullscreen\n      })\n    }\n\n    actions.push({ alt: 'toggle view mode', img: 'eye', onClick: this.toggleSelector })\n    return actions\n  }\n\n  /** Request to open the article in fullscreen */\n  requestFullscreen = () => {\n    const contentElem = this.contentRef.current\n    if (fscreen.fullscreenEnabled) {\n      fscreen.requestFullscreen(contentElem)\n    }\n  }\n\n  /** Set whether Music Only mode is on, to change what content is displayed */\n  setMusicOnly = (musicOnly) => {\n    this.setState({ musicOnly, selectorOpen: false })\n  }\n\n  /** Change whether the selector is open or closed */\n  toggleSelector = () => {\n    this.setState({ selectorOpen: !this.state.selectorOpen })\n  }\n\n  /**\n   * Render all content wrapped by menus/navigation.\n   * navSlideClass is a CSS that will make content slide when the mobile nav slides in.\n   */\n  renderMain = ({ navSlideClass }) => {\n    const { match: routeMatch, previewData } = this.props\n    const { musicOnly, selectorOpen } = this.state\n\n    let articlePath = ''\n    if (!previewData) {\n      articlePath = routeMatch.params.articlePath\n    }\n\n    return (\n      <div className={sc('tng-Article', navSlideClass)} ref={this.contentRef}>\n        { /* \"Music Only\" Indicator */ }\n        <div className={sc('tng-Article-indicator', musicOnly && 'is-visible', navSlideClass)}>\n          music only\n        </div>\n\n        { /* Article Content */ }\n        <div className={sc('tng-Article-content', musicOnly && 'is-musicOnly')}>\n          <CMSItemLoader\n            description='article content'\n            itemPath={`articles/${articlePath}.json`}\n            previewData={previewData && previewData.article}\n            renderOnData={data =>\n              <ArticleContent data={data} musicOnly={musicOnly} />\n            }\n          />\n        </div>\n\n        { /* Links To Other Articles */ }\n        <div className='tng-Article-linksToArticles'>\n          <CMSItemLoader\n            description='links to other articles'\n            itemPath={`generated/article-related/${articlePath}.json`}\n            previewData={previewData && previewData.articleRelated}\n            renderOnData={data =>\n              <LinkToArticles data={data} />\n            }\n            required={false}\n          />\n        </div>\n\n        { /* View Selector */ }\n        <ViewSelector\n          musicOnly={musicOnly}\n          open={selectorOpen}\n          setMusicOnly={this.setMusicOnly}\n          toggleSelector={this.toggleSelector}\n        />\n      </div>\n    )\n  }\n\n  render () {\n    this.actions = this.actions || this.getActions()\n    return <MenuWrapper actions={this.actions} render={this.renderMain} />\n  }\n}\n\nexport default Article\n","/**\n * Tells NetlifyCMS that you will be initializing the CMS manually rather than automatically\n * Only available in version 1.3.6 and above of NetlifyCMS\n */\nif (typeof window !== 'undefined') {\n  window.CMS_MANUAL_INIT = true\n}\n","import React, { Component } from 'react'\n\nclass PreviewContainer extends Component {\n  componentDidMount () {\n    // When running the app with Webpack Dev Server, this code copies the embedded CSS\n    // into the iframe showing the Preview\n    // It is based on stackoverflow answer: https://stackoverflow.com/a/4613196/2051913\n    if (window.parent) {\n      let previewIframe\n\n      for (const iframe of document.querySelectorAll('iframe')) {\n        const hasPreview = !!iframe.contentDocument.querySelector('.tng-PreviewContainer')\n        if (hasPreview) {\n          previewIframe = iframe\n          break\n        }\n      }\n\n      if (previewIframe) {\n        const previewPaneHead = previewIframe.contentDocument.head\n        const stylesheets = window.parent.document.querySelectorAll('style, link[rel=\"stylesheet\"]')\n\n        for (const stylesheet of stylesheets) {\n          previewPaneHead.appendChild(stylesheet.cloneNode(true))\n        }\n      }\n    }\n  }\n\n  render () {\n    return (\n      <div className='tng-PreviewContainer'>\n        { this.props.children }\n      </div>\n    )\n  }\n}\n\nexport default PreviewContainer\n","/** AboutPreview is a custom NetlifyCMS preview template to show the About page */\nimport React from 'react'\n\nimport About from 'myPages/About'\nimport PreviewContainer from './PreviewContainer'\n\nconst AboutPreview = ({ entry, getAsset }) => {\n  const previewData = entry.toJS().data\n  previewData.mainImage = previewData.mainImage && getAsset(previewData.mainImage).toString()\n\n  return (\n    <PreviewContainer>\n      <About previewData={previewData} />\n    </PreviewContainer>\n  )\n}\n\nexport default AboutPreview\n","/** ArticlePreview is a custom NetlifyCMS preview template to show the Article page */\nimport React from 'react'\n\nimport Article from 'myPages/Article'\nimport PreviewContainer from './PreviewContainer'\n\nconst ArticlePreview = ({ entry, getAsset }) => {\n  const article = entry.toJS().data\n  article.mainImage = article.mainImage && getAsset(article.mainImage).toString()\n\n  const articleRelated = {\n    nextArticle: { title: 'A History Of Drum Machines', urlPath: '/not-found' },\n    previousArticle: { title: 'A Map Of Electronic Scenes', urlPath: '/not-found' }\n  }\n\n  return (\n    <PreviewContainer>\n      <Article previewData={{ article, articleRelated }} />\n    </PreviewContainer>\n  )\n}\n\nexport default ArticlePreview\n","export default {\n  id: 'embeddedMusic',\n  label: 'Embedded Music',\n  fields: [\n    {\n      name: 'title',\n      label: 'Title',\n      widget: 'string'\n    },\n    {\n      name: 'iframe',\n      label: 'IFrame Code',\n      widget: 'text'\n    }\n  ],\n  pattern: /^<EmbeddedMusic\\s+title=\"(.*)\"\\s+iframe={(.*)}\\s+\\/>/,\n  fromBlock: regexMatch => ({\n    title: regexMatch[1],\n    iframe: regexMatch[2]\n  }),\n  toBlock: ({ title, iframe }) =>\n    `<EmbeddedMusic title=\"${title || ''}\" iframe={${iframe || ''}} />`,\n  toPreview: () => `<div></div>` // will be overriden by MarkdownRenderer\n}\n","/**\n * EditorSpecialText is a NetlifyCMS editor component that allows the admin user\n * to specify text transformations that are not available in Markdown (alignment, text size).\n * These transformations will be applied on the text in the following paragraph.\n */\nexport default {\n  id: 'specialText',\n  label: 'Special Text',\n  fields: [\n    {\n      name: 'align',\n      label: 'Align',\n      widget: 'select',\n      options: [\n        { label: 'Left', value: 'LEFT' },\n        { label: 'Center', value: 'CENTER' },\n        { label: 'Right', value: 'RIGHT' }\n      ]\n    },\n    {\n      name: 'size',\n      label: 'Text Size',\n      widget: 'select',\n      options: [\n        { label: 'Normal', value: 'NORMAL' },\n        { label: 'Small', value: 'SMALL' },\n        { label: 'Smaller', value: 'SMALLER' },\n        { label: 'Smallest', value: 'SMALLEST' }\n      ],\n      hint: 'These settings will affect the next paragraph'\n    }\n  ],\n  pattern: /^<SpecialText\\s+align=\"(.*)\"\\s+size=\"(.*)\"\\s+\\/>/,\n  fromBlock: regexMatch => {\n    return {\n      align: regexMatch[1],\n      size: regexMatch[2]\n    }\n  },\n  toBlock: ({ align, size }) => `<SpecialText align=\"${align}\" size=\"${size}\" />`,\n  toPreview: () => `<div></div>` // will be overriden by MarkdownRenderer\n}\n","/**\n * EditorTrackList is a NetlifyCMS editor component for the admin user to add\n * a tracklist inside of a page.\n */\nimport { List, fromJS } from 'immutable'\n\n// set default object to never have values set to undefined\nconst defaultTrackValues = {\n  startTime: '',\n  artist: '',\n  trackName: ''\n}\n\nexport default {\n  id: 'tracklist',\n  label: 'Tracklist',\n  fields: [\n    {\n      name: 'tracks',\n      label: 'Tracks',\n      widget: 'list',\n      fields: [\n        {\n          name: 'startTime',\n          label: 'Start Time',\n          widget: 'string',\n          default: '00:00:00',\n          pattern: [\n            '^[0-5]?[0-9]:[0-5][0-9](:[0-5][0-9])?$',\n            'Enter a time in the format hh:mm:ss or mm:ss'\n          ]\n        },\n        {\n          name: 'artist',\n          label: 'Artist',\n          widget: 'string'\n        },\n        {\n          name: 'trackName',\n          label: 'Track Name',\n          widget: 'string'\n        }\n      ]\n    }\n  ],\n  pattern: /^<Tracklist\\stracksStr={(.*)}\\s\\/>/,\n  fromBlock: regexMatch => {\n    let tracks = []\n    if (regexMatch[1]) {\n      tracks = fromJS(JSON.parse(regexMatch[1]))\n    }\n\n    return { tracks }\n  },\n  toBlock: ({ tracks = [] }) => {\n    if (List.isList(tracks)) {\n      tracks = tracks.toJS()\n    }\n\n    const tracksWithDefaults = tracks.map(track => ({ ...defaultTrackValues, ...track }))\n    const tracksStr = JSON.stringify(tracksWithDefaults)\n    return `<Tracklist tracksStr={${tracksStr}} />`\n  },\n  toPreview: () => `<div></div>` // will be overriden by MarkdownRenderer\n}\n","/**\n * LimitedText is just a copy of a slightly altered version of the standard NetlifyCMS\n * Text widget, except it strictly imposes a character limit, and most importantly it\n * displays how many characters you've written so far.\n */\nimport React, { Component } from 'react'\nimport NetlifyCmsWidgetText from 'netlify-cms-widget-text'\n\nimport './LimitedText.css'\n\nconst NetlifyTextWidget = NetlifyCmsWidgetText.controlComponent\n\nconst LimitedText = (limitNum) => {\n  // This needs to return a React component class, not just a stateless component.\n  // Otherwise, the NetlifyCMS wrappers will fail.\n  return class extends Component {\n    render () {\n      const { onChange, value = '', ...otherProps } = this.props\n      const alteredValue = value.slice(0, limitNum)\n\n      return (\n        <div className='tng-LimitedText'>\n          <NetlifyTextWidget\n            onChange={value => {\n              onChange(value.slice(0, limitNum))\n            }}\n            value={alteredValue}\n            {...otherProps}\n          />\n          <div className='tng-LimitedText-indicator'>\n            ({alteredValue.length}/{limitNum})\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default LimitedText\n","import { categories } from 'myUtils/constants'\n\nconst isProd = process.env.NODE_ENV === 'production'\nconst saveFolder = isProd ? 'cms-content' : 'cms-dev-content'\n\nexport default {\n  backend: {\n    name: 'git-gateway',\n    branch: isProd ? 'master' : process.env.REACT_APP_CMS_BACKEND_BRANCH\n  },\n  media_folder: `public/${saveFolder}/uploads`,\n  public_folder: `${saveFolder}/uploads`,\n\n  /* Collections */\n  collections: [\n    {\n      name: 'articles',\n      label: 'Articles',\n      description: 'Company News',\n      folder: `public/${saveFolder}/articles`,\n      slug: '{{year}}{{month}}{{day}}_{{slug}}',\n      create: true,\n      format: 'json',\n      fields: [\n        {\n          name: 'publicationDate',\n          label: 'Publication Date',\n          widget: 'date',\n          format: 'MMM DD, YYYY'\n        },\n        {\n          name: 'title',\n          label: 'Title',\n          widget: 'string',\n          tagname: 'h1'\n        },\n        {\n          name: 'mainImage',\n          label: 'Main Image',\n          widget: 'image'\n        },\n        {\n          name: 'category',\n          label: 'Category',\n          widget: 'select',\n          options: categories.map(category => (\n            {\n              value: category.key,\n              label: category.name\n            }\n          ))\n        },\n        {\n          name: 'summary',\n          label: 'Summary',\n          widget: 'text160Limit'\n        },\n        {\n          name: 'body',\n          label: 'Body',\n          widget: 'markdown'\n        }\n      ]\n    },\n    {\n      name: 'pages',\n      label: 'Pages',\n      description: 'Edit Pages',\n      delete: false,\n      format: 'json',\n      files: [\n        {\n          name: 'home',\n          label: 'Home / Start page with product overview',\n          file: `public/${saveFolder}/pages/home.json`,\n          fields: [\n            {\n              name: 'mainImage',\n              label: 'Main Image',\n              widget: 'image'\n            },\n            {\n              name: 'body',\n              label: 'Body',\n              widget: 'markdown'\n            }\n          ]\n        },\n        {\n          name: 'what',\n          label: 'What / What do we do',\n          file: `public/${saveFolder}/pages/what.json`,\n          fields: [\n            {\n              name: 'mainImage',\n              label: 'Main Image',\n              widget: 'image'\n            },\n            {\n              name: 'body',\n              label: 'Body',\n              widget: 'markdown'\n            }\n          ]\n        },\n        {\n          name: 'why',\n          label: 'Why / Why we do it',\n          file: `public/${saveFolder}/pages/why.json`,\n          fields: [\n            {\n              name: 'mainImage',\n              label: 'Main Image',\n              widget: 'image'\n            },\n            {\n              name: 'body',\n              label: 'Body',\n              widget: 'markdown'\n            }\n          ]\n        },\n        {\n          name: 'how',\n          label: 'How / How we do it',\n          file: `public/${saveFolder}/pages/how.json`,\n          fields: [\n            {\n              name: 'mainImage',\n              label: 'Main Image',\n              widget: 'image'\n            },\n            {\n              name: 'body',\n              label: 'Body',\n              widget: 'markdown'\n            }\n          ]\n        },\n        {\n          name: 'who',\n          label: 'Who / Team introduction',\n          file: `public/${saveFolder}/pages/who.json`,\n          fields: [\n            {\n              name: 'mainImage',\n              label: 'Main Image',\n              widget: 'image'\n            },\n            {\n              name: 'body',\n              label: 'Body',\n              widget: 'markdown'\n            }\n          ]\n        },\n        {\n          name: 'timeline',\n          label: 'Timeline / Company history',\n          file: `public/${saveFolder}/pages/timeline.json`,\n          fields: [\n            {\n              name: 'mainImage',\n              label: 'Main Image',\n              widget: 'image'\n            },\n            {\n              name: 'body',\n              label: 'Body',\n              widget: 'markdown'\n            }\n          ]\n        },\n        {\n          name: 'contact',\n          label: 'Contact / Contact Us',\n          file: `public/${saveFolder}/pages/contact.json`,\n          fields: [\n            {\n              name: 'mainImage',\n              label: 'Main Image',\n              widget: 'image'\n            },\n            {\n              name: 'body',\n              label: 'Body',\n              widget: 'markdown'\n            }\n          ]\n        },\n        {\n          name: 'about',\n          label: 'About Page',\n          file: `public/${saveFolder}/pages/about.json`,\n          fields: [\n            {\n              name: 'mainImage',\n              label: 'Main Image',\n              widget: 'image'\n            },\n            {\n              name: 'body',\n              label: 'Body',\n              widget: 'markdown'\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n","/** Admin loads NetlifyCMS and sets custom widgets and templates for the CMS */\nimport React, { Component } from 'react'\nimport { Titled } from 'react-titled'\nimport './admin/setup'\nimport CMS, { init } from 'netlify-cms'\n\nimport AboutPreview from './admin/AboutPreview'\nimport ArticlePreview from './admin/ArticlePreview'\nimport EditorEmbeddedMusic from './admin/EditorEmbeddedMusic'\nimport EditorSpecialText from './admin/EditorSpecialText'\nimport EditorTracklist from './admin/EditorTracklist'\nimport LimitedText from './admin/LimitedText'\nimport config from './admin/config'\n\nCMS.init = init\n\nclass Admin extends Component {\n  componentDidMount () {\n    CMS.init({ config })\n\n    CMS.registerEditorComponent(EditorEmbeddedMusic)\n    CMS.registerEditorComponent(EditorSpecialText)\n    CMS.registerEditorComponent(EditorTracklist)\n\n    CMS.registerWidget('text160Limit', LimitedText(160))\n\n    CMS.registerPreviewTemplate('about', AboutPreview)\n    CMS.registerPreviewTemplate('articles', ArticlePreview)\n  }\n\n  render () {\n    return (\n      <Titled title={title => `Admin | ${title}`}>\n        <div id='nc-root' />\n      </Titled>\n    )\n  }\n}\n\nexport default Admin\n","/**\n * This is a component that renders a iframe, that should have music, within our Markdown content.\n * It will have a track number that will only show up with Music Only mode active.\n */\nimport React, { Component } from 'react'\n\nimport './EmbeddedMusic.css'\n\nclass EmbeddedMusic extends Component {\n  iframeWrapperRef = React.createRef()\n\n  state = {\n    aspectPercentage: '',\n    trackNumber: ''\n  }\n\n  componentDidMount () {\n    this.saveAspectRatio()\n    this.setState({ trackNumber: this.props.getTrackNumber() })\n  }\n\n  componentDidUpdate (prevProps) {\n    if (this.props.iframe !== prevProps.iframe) {\n      this.saveAspectRatio()\n    }\n  }\n\n  /**\n   * Get the aspect percentages of all provided iframes, unless they have a dimension that is not\n   * defined in pixels (e.g. Soundcloud iframe code sets width as 100%). These aspect percentages\n   * can be used to make the iframe responsive\n   */\n  saveAspectRatio () {\n    let aspectPercentage = ''\n    const iframe = this.iframeWrapperRef.current.children[0]\n    if (iframe && iframe.width && iframe.height) {\n      const isPixelNumbers = /^\\d+$/.test(`${iframe.width}${iframe.height}`)\n      if (isPixelNumbers) {\n        aspectPercentage = `${iframe.height * 100 / iframe.width}%`\n      }\n    }\n\n    this.setState({ aspectPercentage })\n  }\n\n  render () {\n    const { aspectPercentage, trackNumber } = this.state\n    const { extraClass, showTrackNumber, title, iframe } = this.props\n\n    return (\n      <div className={`tng-EmbeddedMusic ${extraClass}`}>\n        <div className='tng-EmbeddedMusic-title'>\n          {showTrackNumber &&\n            <span>{trackNumber}. </span>\n          }\n          {title}\n        </div>\n        <div className={aspectPercentage ? 'tng-EmbeddedMusic-fluidFrameWrapper' : ''}\n          ref={this.iframeWrapperRef}\n          style={aspectPercentage ? { paddingBottom: aspectPercentage } : {}}>\n          { iframe }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EmbeddedMusic\n","/** A component to render an image that was provided in the Markdown of our article content */\nimport React from 'react'\n\nimport './MarkdownImage.css'\n\n// Note: top-level element cannot be a div, because images are wrapped with <p> elements\nconst MarkdownImage = ({ alt, src, title }) => (\n  <img alt={alt} className='tng-MarkdownImage' src={src} title={title} />\n)\n\nexport default MarkdownImage\n","import React from 'react'\n\nimport sc from 'myUtils/suitClass'\nimport './SpecialText.css'\n\nconst SpecialText = ({ align, size }) => (\n  <div\n    className={sc(\n      'tng-SpecialText',\n      align && `tng-SpecialText--${align.toLowerCase()}`,\n      size && `tng-SpecialText--${size.toLowerCase()}`\n    )}\n  />\n)\n\nexport default SpecialText\n","/**\n * Tracklist is a component that renders the tracklist of a music mix.\n */\nimport React from 'react'\n\nimport './Tracklist.css'\n\nconst Tracklist = ({ tracksStr }) => {\n  const tracks = tracksStr ? JSON.parse(tracksStr) : []\n\n  return (\n    <section className='tng-Tracklist'>\n      <h2 className='tng-Tracklist-title'>Tracklist</h2>\n      <ul className='tng-Tracklist-list'>\n        {tracks.map(({ startTime, artist, trackName }, i) =>\n          <li className='tng-Tracklist-item' key={i}>\n            <div className='tng-Tracklist-time'>{formatTime(startTime)} </div>\n            <div>\n              <div className='tng-Tracklist-artist'>{artist}</div>\n              <div className='tng-Tracklist-name'>{trackName}</div>\n            </div>\n          </li>\n        )}\n      </ul>\n    </section>\n  )\n}\n\n/** formatTime will format the track time so it has a mm:ss or hh:mm:ss display */\nfunction formatTime (startTime) {\n  const trimmedTime = startTime.trim()\n\n  if (trimmedTime.length === 0) {\n    return '00:00'\n  }\n\n  const timeFormat = /^[0-5]?[0-9]:[0-5][0-9](:[0-5][0-9])?$/\n  if (!trimmedTime.match(timeFormat)) {\n    return '??:??'\n  }\n\n  if (trimmedTime.length === 4 || trimmedTime.length === 7) {\n    // trimmedTime is m:ss or h:mm:ss\n    return `0${trimmedTime}`\n  }\n\n  return trimmedTime\n}\n\nexport default Tracklist\n","import Markdown from 'markdown-to-jsx'\nimport React from 'react'\n\nimport EmbeddedMusic from './markdownRenderer/EmbeddedMusic'\nimport MarkdownImage from './markdownRenderer/MarkdownImage'\nimport SpecialText from './markdownRenderer/SpecialText'\nimport Tracklist from './markdownRenderer/Tracklist'\nimport sc from 'myUtils/suitClass'\nimport './MarkdownRenderer.css'\n\nconst MarkdownRenderer = ({ md, musicOnly = false }) => {\n  let trackNumber = 1\n\n  return (\n    <Markdown\n      className={sc('tng-MarkdownRenderer', musicOnly && 'is-showingMusicOnly')}\n      children={md}\n      options={{\n        overrides: {\n          EmbeddedMusic: {\n            component: EmbeddedMusic,\n            props: {\n              extraClass: 'tng-MarkdownRenderer-music',\n              getTrackNumber: () => trackNumber++,\n              showTrackNumber: musicOnly\n            }\n          },\n          SpecialText,\n          Tracklist,\n          img: {\n            component: MarkdownImage\n          }\n        }\n      }}\n    />\n  )\n}\n\nexport default MarkdownRenderer\n"],"sourceRoot":""}